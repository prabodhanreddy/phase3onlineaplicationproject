{"version":3,"sources":["./src/app/models/quiz.ts","./src/app/app.component.css","./src/environments/environment.ts","./src/app/models/question.ts","./src/app/quiz/quiz.component.ts","./src/app/app.component.ts","./src/app/models/index.ts","./src/app/app.component.html","./src/app/quiz/quiz.component.css","./src/app/models/quiz-config.ts","./src/app/app.module.ts","./src/app/models/option.ts","./src/app/services/quiz.service.ts","./src/app/quiz/quiz.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { QuizConfig } from './quiz-config';\nimport { Question } from './question';\n\nexport class Quiz {\n    id: number;\n    name: string;\n    description: string;\n    config: QuizConfig;\n    questions: Question[];\n\n    constructor(data: any) {\n        if (data) {\n            this.id = data.id;\n            this.name = data.name;\n            this.description = data.description;\n            this.config = new QuizConfig(data.config);\n            this.questions = [];\n            data.questions.forEach(q => {\n                this.questions.push(new Question(q));\n            });\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Option } from './option';\n\nexport class Question {\n    id: number;\n    name: string;\n    questionTypeId: number;\n    options: Option[];\n    answered: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.name = data.name;\n        this.questionTypeId = data.questionTypeId;\n        this.options = [];\n        data.options.forEach(o => {\n            this.options.push(new Option(o));\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { QuizService } from '../services/quiz.service';\nimport { HelperService } from '../services/helper.service';\nimport { Option, Question, Quiz, QuizConfig } from '../models/index';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css'],\n  providers: [QuizService]\n})\nexport class QuizComponent implements OnInit {\n  quizes: any[];\n  quiz: Quiz = new Quiz(null);\n  mode = 'quiz';\n  quizName: string;\n  config: QuizConfig = {\n    'allowBack': true,\n    'allowReview': true,\n    'autoMove': false,  // if true, it will move to next question automatically when answered.\n    'duration': 300,  // indicates the time (in secs) in which quiz needs to be completed. 0 means unlimited.\n    'pageSize': 1,\n    'requiredAll': false,  // indicates if you must answer all the questions before submitting.\n    'richText': false,\n    'shuffleQuestions': false,\n    'shuffleOptions': false,\n    'showClock': false,\n    'showPager': true,\n    'theme': 'none'\n  };\n\n  pager = {\n    index: 0,\n    size: 1,\n    count: 1\n  };\n  timer: any = null;\n  startTime: Date;\n  endTime: Date;\n  ellapsedTime = '00:00';\n  duration = '';\n\n  constructor(private quizService: QuizService) { }\n\n  ngOnInit() {\n    this.quizes = this.quizService.getAll();\n    this.quizName = this.quizes[0].id;\n    this.loadQuiz(this.quizName);\n  }\n\n  loadQuiz(quizName: string) {\n    this.quizService.get(quizName).subscribe(res => {\n      this.quiz = new Quiz(res);\n      this.pager.count = this.quiz.questions.length;\n      this.startTime = new Date();\n      this.ellapsedTime = '00:00';\n      this.timer = setInterval(() => { this.tick(); }, 1000);\n      this.duration = this.parseTime(this.config.duration);\n    });\n    this.mode = 'quiz';\n  }\n\n  tick() {\n    const now = new Date();\n    const diff = (now.getTime() - this.startTime.getTime()) / 1000;\n    if (diff >= this.config.duration) {\n      this.onSubmit();\n    }\n    this.ellapsedTime = this.parseTime(diff);\n  }\n\n  parseTime(totalSeconds: number) {\n    let mins: string | number = Math.floor(totalSeconds / 60);\n    let secs: string | number = Math.round(totalSeconds % 60);\n    mins = (mins < 10 ? '0' : '') + mins;\n    secs = (secs < 10 ? '0' : '') + secs;\n    return `${mins}:${secs}`;\n  }\n\n  get filteredQuestions() {\n    return (this.quiz.questions) ?\n      this.quiz.questions.slice(this.pager.index, this.pager.index + this.pager.size) : [];\n  }\n\n  onSelect(question: Question, option: Option) {\n    if (question.questionTypeId === 1) {\n      question.options.forEach((x) => { if (x.id !== option.id) x.selected = false; });\n    }\n\n    if (this.config.autoMove) {\n      this.goTo(this.pager.index + 1);\n    }\n  }\n\n  goTo(index: number) {\n    if (index >= 0 && index < this.pager.count) {\n      this.pager.index = index;\n      this.mode = 'quiz';\n    }\n  }\n\n  isAnswered(question: Question) {\n    return question.options.find(x => x.selected) ? 'Answered' : 'Not Answered';\n  };\n\n  isCorrect(question: Question) {\n    return question.options.every(x => x.selected === x.isAnswer) ? 'correct' : 'wrong';\n  };\n\n  onSubmit() {\n    let answers = [];\n    this.quiz.questions.forEach(x => answers.push({ 'quizId': this.quiz.id, 'questionId': x.id, 'answered': x.answered }));\n\n    // Post your data to the server here. answers contains the questionId and the users' answer.\n    console.log(this.quiz.questions);\n    this.mode = 'result';\n  }\n}\n","import { Component } from '@angular/core';\n\nimport { QuizComponent } from './quiz/quiz.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","export * from './option';\nexport * from './question';\nexport * from './quiz';\nexport * from './quiz-config';\n","export default \"<div class=\\\"container\\\">\\n  <app-quiz></app-quiz>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJxdWl6LmNvbXBvbmVudC5jc3MifQ== */\";","export class QuizConfig {\n    allowBack: boolean;\n    allowReview: boolean;\n    autoMove: boolean;  // if boolean; it will move to next question automatically when answered.\n    duration: number;  // indicates the time in which quiz needs to be completed. 0 means unlimited.\n    pageSize: number;\n    requiredAll: boolean;  // indicates if you must answer all the questions before submitting.\n    richText: boolean;\n    shuffleQuestions: boolean;\n    shuffleOptions: boolean;\n    showClock: boolean;\n    showPager: boolean;\n    theme: string;\n\n    constructor(data: any) {\n        data = data || {};\n        this.allowBack = data.allowBack;\n        this.allowReview = data.allowReview;\n        this.autoMove = data.autoMove;\n        this.duration = data.duration;\n        this.pageSize = data.pageSize;\n        this.requiredAll = data.requiredAll;\n        this.richText = data.richText;\n        this.shuffleQuestions = data.shuffleQuestions;\n        this.shuffleOptions = data.shuffleOptions;\n        this.showClock = data.showClock;\n        this.showPager = data.showPager;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Option {\n    id: number;\n    questionId: number;\n    name: string;\n    isAnswer: boolean;\n    selected: boolean;\n\n    constructor(data: any) {\n        data = data || {};\n        this.id = data.id;\n        this.questionId = data.questionId;\n        this.name = data.name;\n        this.isAnswer = data.isAnswer;\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class QuizService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string) {\n    return this.http.get(url);\n  }\n\n  getAll() {\n    return [\n      { id: 'data/javascript.json', name: 'JavaScript' },\n      { id: 'data/aspnet.json', name: 'Asp.Net' },\n      { id: 'data/csharp.json', name: 'C Sharp' },\n      { id: 'data/designPatterns.json', name: 'Design Patterns' }\n    ];\n  }\n\n}\n","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">\\n        <h3>Online Test Application</h3>\\n    </div>\\n    <div class=\\\"col-6 text-right\\\">\\n        Select Quiz:\\n        <select [(ngModel)]=\\\"quizName\\\" (change)=\\\"loadQuiz(quizName)\\\">\\n      <option *ngFor=\\\"let quiz of quizes\\\" [value]=\\\"quiz.id\\\">{{quiz.name}}</option>\\n    </select>\\n    </div>\\n</div>\\n<div id=\\\"quiz\\\">\\n    <h2 class=\\\"text-center font-weight-normal\\\">{{quiz.name}}</h2>\\n    <hr />\\n\\n    <div *ngIf=\\\"mode=='quiz' && quiz\\\">\\n        <div *ngFor=\\\"let question of filteredQuestions;\\\">\\n            <div class=\\\"badge badge-info\\\">Question {{pager.index + 1}} of {{pager.count}}.</div>\\n            <div *ngIf=\\\"config.duration\\\" class=\\\"badge badge-info float-right\\\">Time: {{ellapsedTime}} / {{duration}}</div>\\n            <h3 class=\\\"font-weight-normal\\\">{{pager.index + 1}}.\\n                <span [innerHTML]=\\\"question.name\\\"></span>\\n            </h3>\\n            <div class=\\\"row text-left options\\\">\\n                <div class=\\\"col-6\\\" *ngFor=\\\"let option of question.options\\\">\\n                    <div class=\\\"option\\\">\\n                        <label class=\\\"font-weight-normal\\\" [attr.for]=\\\"option.id\\\">\\n              <input id=\\\"{{option.id}}\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"option.selected\\\" (change)=\\\"onSelect(question, option);\\\" /> {{option.name}}\\n            </label>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(0);\\\">First</button>\\n            <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.index - 1);\\\">Prev</button>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"goTo(pager.index + 1);\\\">Next</button>\\n            <button class=\\\"btn btn-default\\\" *ngIf=\\\"config.allowBack\\\" (click)=\\\"goTo(pager.count - 1);\\\">Last</button>\\n            <!--<pagination *ngIf=\\\"config.showPager\\\" direction-links=\\\"false\\\" total-items=\\\"totalItems\\\" items-per-page=\\\"itemsPerPage\\\" ng-model=\\\"currentPage\\\" ng-change=\\\"pageChanged()\\\"></pagination>-->\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row text-center\\\" *ngIf=\\\"mode=='review'\\\">\\n        <div class=\\\"col-4 cursor-pointer\\\" *ngFor=\\\"let question of quiz.questions; let index = index;\\\">\\n            <div (click)=\\\"goTo(index)\\\" class=\\\"p-3 mb-2 {{ isAnswered(question) == 'Answered'? 'bg-info': 'bg-warning' }}\\\">{{index + 1}}. {{ isAnswered(question) }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"result\\\" *ngIf=\\\"mode=='result'\\\">\\n        <h2>Quiz Result</h2>\\n        <div *ngFor=\\\"let question of quiz.questions; let index = index\\\">\\n            <div class=\\\"result-question\\\">\\n                <h5>{{index + 1}}. {{question.name}}</h5>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\" *ngFor=\\\"let Option of question.options\\\">\\n                        <input id=\\\"{{Option.id}}\\\" type=\\\"checkbox\\\" disabled=\\\"disabled\\\" [(ngModel)]=\\\"Option.selected\\\" /> {{Option.name}}\\n                    </div>\\n                </div>\\n                <div class=\\\"p-1 m-2 alert {{ isCorrect(question) == 'correct'? 'alert-success': 'alert-danger'}}\\\">Your answer is {{isCorrect(question)}}.</div>\\n            </div>\\n        </div>\\n        <h4 class=\\\"alert alert-info text-center\\\">You may close this window now.</h4>\\n    </div>\\n    <hr />\\n    <div *ngIf=\\\"mode!='result'\\\">\\n        <button class=\\\"btn btn-warning\\\" (click)=\\\"mode = 'quiz'\\\">Quiz</button>\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"mode = 'review'\\\">Review</button>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"onSubmit();\\\">Submit Quiz</button>\\n    </div>\\n</div>\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}